name: Deploy website to GitHub Pages

env:
  WC_HUGO_VERSION: '0.136.5'

on:
  # 触发工作流程，每次向 `main` 分支推送时
  push:
    branches: ["main"]
  # 允许你从 GitHub 的 Actions 标签页手动运行此工作流程
  workflow_dispatch:

# 提供权限以克隆仓库并将其部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建网站
  build:
    if: github.repository_owner != 'HugoBlox'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
          # 获取 Hugo 的 .GitInfo 和 .Lastmod 所需的历史记录
        fetch-depth: 0
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: ${{ env.WC_HUGO_VERSION }}
        extended: true
    - uses: actions/cache@v3
      with:
        path: /tmp/hugo_cache_runner/
        key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-hugomod-
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v3
    - name: Build with Hugo
      env:
        HUGO_ENVIRONMENT: production
      run: |
        echo "Hugo Cache Dir: $(hugo config | grep cachedir)"
        hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/"
    - name: Generate Pagefind search index
      run: npx pagefind --site "public"
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./public

  # 将网站部署到 GitHub Pages 托管
  deploy:
    if: github.repository_owner != 'HugoBlox'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2